//! macOS-specific code

use cocoa::appkit::{NSApp, NSApplication, NSEventModifierFlags, NSMenu, NSMenuItem};
use cocoa::base::{nil, selector};
use cocoa::foundation::{NSAutoreleasePool, NSString, NSUInteger};

use objc::*;

#[allow(non_upper_case_globals)]
const NSEventModifierFlagOption: NSUInteger = 1 << 19;

#[allow(non_upper_case_globals)]
const NSEventModifierFlagCommand: NSUInteger = 1 << 20;

// create macOS menu-bar
pub(crate) unsafe fn create_menu_bar() {
    // assume that an NSAutoreleasePool is generated by winit-rs.
    let app = NSApp();

    let menubar = NSMenu::new(nil).autorelease();
    let app_menu_item = NSMenuItem::new(nil).autorelease();
    menubar.addItem_(app_menu_item);
    app.setMainMenu_(menubar);

    // ReizeiinTouka
    //  - About ReizeiinTouka...
    //  -
    //  - Hide ReizeiinTouka
    //  - Hide others
    //  - Show All
    //  - --
    //  - Quit ReizeiinTouka
    let app_menu = NSMenu::new(nil).autorelease();

    app_menu.addItem_(
        NSMenuItem::alloc(nil)
            .initWithTitle_action_keyEquivalent_(
                NSString::alloc(nil).init_str("About ReizeiinTouka\0"),
                sel![orderFrontStandardAboutPanel:],
                NSString::alloc(nil).init_str("\0"),
            )
            .autorelease(),
    );

    app_menu.addItem_(NSMenuItem::separatorItem(nil).autorelease());

    app_menu.addItem_(
        NSMenuItem::alloc(nil)
            .initWithTitle_action_keyEquivalent_(
                NSString::alloc(nil).init_str("Hide ReizeiinTouka\0"),
                selector("hide:"),
                NSString::alloc(nil).init_str("h\0"),
            )
            .autorelease(),
    );

    let hide_others = NSMenuItem::alloc(nil)
        .initWithTitle_action_keyEquivalent_(
            NSString::alloc(nil).init_str("Hide Others\0"),
            selector("hideOtherApplications:"),
            NSString::alloc(nil).init_str("h\0"),
        )
        .autorelease();

    hide_others.setKeyEquivalentModifierMask_(
        NSEventModifierFlags::from_bits(NSEventModifierFlagOption | NSEventModifierFlagCommand).unwrap(),
    );

    app_menu.addItem_(hide_others);

    app_menu.addItem_(NSMenuItem::alloc(nil)
    .initWithTitle_action_keyEquivalent_(
        NSString::alloc(nil).init_str("Show All\0"),
        selector("unhideAllApplications:"),
        NSString::alloc(nil).init_str("\0"),
    )
    .autorelease());

    app_menu.addItem_(NSMenuItem::separatorItem(nil).autorelease());

    let services = NSMenuItem::alloc(nil)
        .initWithTitle_action_keyEquivalent_(
            NSString::alloc(nil).init_str("Services\0"),
            std::mem::zeroed(), // null-selector
            NSString::alloc(nil).init_str("\0"),
        )
        .autorelease();

    let services_menu = NSMenu::new(nil).autorelease();
    let _: () = msg_send![app, setServicesMenu: services_menu];
    services.setSubmenu_(services_menu);
    
    app_menu.addItem_(services);

    app_menu.addItem_(NSMenuItem::separatorItem(nil).autorelease());

    let quit_item = NSMenuItem::alloc(nil)
        .initWithTitle_action_keyEquivalent_(
            NSString::alloc(nil).init_str("Quit ReizeiinTouka\0"),
            selector("terminate:"),
            NSString::alloc(nil).init_str("q\0"),
        )
        .autorelease();
    app_menu.addItem_(quit_item);

    app_menu_item.setSubmenu_(app_menu);
}
